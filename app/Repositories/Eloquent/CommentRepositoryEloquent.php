<?php

namespace App\Repositories\Eloquent;

use Illuminate\Support\Facades\Auth;
use League\HTMLToMarkdown\HtmlConverter;
use Parsedown;
use Prettus\Repository\Eloquent\BaseRepository;
use Prettus\Repository\Criteria\RequestCriteria;
use App\Contracts\Repositories\CommentRepository;
use App\Models\Comment;
use App\Validators\CommentValidator;

/**
 * Class CommentRepositoryEloquent
 * @package namespace App\Repositories\Eloquent;
 */
class CommentRepositoryEloquent extends BaseRepository implements CommentRepository
{
    /**
     * Specify Model class name
     *
     * @return string
     */
    public function model()
    {
        return Comment::class;
    }

    

    /**
     * Boot up the repository, pushing criteria
     */
    public function boot()
    {
        $this->pushCriteria(app(RequestCriteria::class));
    }

    public function create(array $attributes)
    {
        $attributes['user_id'] = Auth::id();
        $attributes['origin_content'] = $attributes['content'];
        //TODO markdown 做下封装处理
        $attributes['content'] = (new Parsedown())->setBreaksEnabled(true)->text($attributes['content']);

        return parent::create($attributes); // TODO: Change the autogenerated stub
    }

    public function all($columns = ['*'])
    {
        $lists = parent::all($columns);

        //foreach ($lists as &$list) {
        //    $list->content = $parseDown->text($list->content);
        //}

        return $lists;
    }
}
